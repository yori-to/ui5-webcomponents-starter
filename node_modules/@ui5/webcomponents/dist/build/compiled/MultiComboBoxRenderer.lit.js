
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/src/renderer/ifDefined.js';
import { html, svg, repeat } from '@ui5/webcomponents-base/src/renderer/LitRenderer.js';
const MultiComboBoxLitRenderer = {};
const block0 = (context) => { return html`<div class="ui5-multi-combobox--wrapper"><ui5-input id="ui5-multi-combobox--input"		value="${ifDefined(context.ctr.value)}"		placeholder="${ifDefined(context.ctr.placeholder)}"		?disabled=${ifDefined(context.ctr.disabled)}		?readonly=${ifDefined(context.ctr.readonly)}		value-state="${ifDefined(context.ctr.valueState)}"		show-suggestions		@ui5-input="${ifDefined(context.ctr._inputLiveChange)}"		@ui5-change=${ifDefined(context.ctr._inputChange)}		@keydown="${ifDefined(context.ctr._keydown)}"><ui5-tokenizer slot="_beginContent"			show-more			class="ui5-multi-combobox-tokenizer"			?disabled="${ifDefined(context.ctr.disabled)}"			@ui5-showMoreItemsPress="${ifDefined(context.ctr._showMorePopover)}"			@ui5-tokenDelete="${ifDefined(context.ctr._tokenDelete)}"			@focusout="${ifDefined(context.ctr._tokenizerFocusOut)}"		>			${ repeat(context.ctr.items, undefined, (item, index) => block1(item, index, context)) }</ui5-tokenizer>		${ !context.ctr.readonly ? block3(context) : undefined }</ui5-input><ui5-popover 		class="ui5-multi-combobox-selected-items--popover"		horizontal-align="Stretch"		hide-header		?hide-arrow=${ifDefined(context.editable)}		placement-type="Bottom"><ui5-list separators="None" mode="${ifDefined(context.selectedItemsListMode)}"			@ui5-selectionChange=${ifDefined(context.ctr._selectedItemsSelectionChange)}>			${ repeat(context.ctr.items, undefined, (item, index) => block4(item, index, context)) }</ui5-list></ui5-popover><ui5-popover class="ui5-multi-combobox-all-items--popover"		hide-header		hide-arrow		horizontal-align="Stretch"		initial-focus="ui5-multi-combobox--input"		horizontal-align="Left"		placement-type="Bottom"		@ui5-selectionChange=${ifDefined(context.ctr._allItemsSelectionChange)}		@ui5-afterClose=${ifDefined(context.ctr._afterAllPopoverClose)}		@ui5-afterOpen=${ifDefined(context.ctr._afterAllPopoverOpen)}><ui5-list separators="None" mode="MultiSelect" class="ui5-multi-combobox-all-items-list">			${ repeat(context.ctr._filteredItems, undefined, (item, index) => block6(item, index, context)) }</ui5-list></ui5-popover></div>`; };
const block1 = (item, index, context) => { return html`${ item.selected ? block2(item, index, context) : undefined }`; };
const block2 = (item, index, context) => { return html`<ui5-token ?readonly="${ifDefined(context.ctr.readonly)}" class="ui5-multi-combobox--token" data-ui5-id="${ifDefined(item._id)}" >${ifDefined(item.textContent)}</ui5-token>				`; };
const block3 = (context) => { return html`<ui5-icon src="sap-icon://slim-arrow-down" 				slot="icon"				@ui5-press=${ifDefined(context.ctr._showAllItemsPopover)}				class="${ifDefined(context.classes.icon)}"			></ui5-icon>		`; };
const block4 = (item, index, context) => { return html`${ item.selected ? block5(item, index, context) : undefined }`; };
const block5 = (item, index, context) => { return html`<ui5-li type="Active" data-ui5-token-id="${ifDefined(item._id)}" .selected="${ifDefined(context.editable)}">${ifDefined(item.textContent)}</ui5-li>				`; };
const block6 = (item, index, context) => { return html`<ui5-li type="Active" ?selected=${ifDefined(item.selected)} data-ui5-token-id="${ifDefined(item._id)}">${ifDefined(item.textContent)}</ui5-li>			`; };
const renderMe = block0;
MultiComboBoxLitRenderer.render = renderMe;
export default MultiComboBoxLitRenderer;