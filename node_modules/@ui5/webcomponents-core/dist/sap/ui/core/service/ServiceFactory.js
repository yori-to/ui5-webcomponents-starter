import BaseObject from '../../base/Object.js';
import Service from './Service.js';
import assert from '../../../base/assert.js';
var ServiceFactory = BaseObject.extend('sap.ui.core.service.ServiceFactory', {
    metadata: { 'library': 'sap.ui.core' },
    constructor: function (vService) {
        BaseObject.apply(this);
        var fnService = typeof vService === 'object' ? Service.create(vService) : vService;
        assert(!fnService || fnService && typeof fnService === 'function', 'The service constructor either should be undefined or a constructor function!');
        this._fnService = fnService;
    }
});
ServiceFactory.prototype.destroy = function () {
    BaseObject.prototype.destroy.apply(this, arguments);
    delete this._fnService;
};
ServiceFactory.prototype.createInstance = function (oServiceContext) {
    if (typeof this._fnService === 'function') {
        return Promise.resolve(new this._fnService(oServiceContext));
    } else {
        return Promise.reject(new Error('Usage of sap.ui.core.service.ServiceFactory requires a service constructor function to create a new service instance or to override the createInstance function!'));
    }
};
export default ServiceFactory;