import Log from '../../../../base/Log.js';
import jQuery from '../../../thirdparty/jquery.js';
export default {
    _routeMatched: function (oArguments, bInital, oNestingChild) {
        var oRouter = this._oRouter, oParentPlaceInfo, oPlaceInfo, oTarget, oConfig, oEventData, oView = null, oTargetControl = null, oTargetData;
        oRouter._matchedRoute = this;
        if (this._oParent) {
            oParentPlaceInfo = this._oParent._routeMatched(oArguments);
        } else if (this._oNestingParent) {
            this._oNestingParent._routeMatched(oArguments, false, this);
        }
        oConfig = jQuery.extend({}, oRouter._oConfig, this._oConfig);
        oTargetData = jQuery.extend({}, oArguments);
        oTargetData.routeConfig = oConfig;
        oEventData = {
            name: oConfig.name,
            arguments: oArguments,
            config: oConfig
        };
        if (oNestingChild) {
            oEventData.nestedRoute = oNestingChild;
        }
        this.fireBeforeMatched(oEventData);
        oRouter.fireBeforeRouteMatched(oEventData);
        if (this._oTarget) {
            oTarget = this._oTarget;
            oTarget._updateOptions(this._convertToTargetOptions(oConfig));
            if (oTarget._isValid(oParentPlaceInfo, false)) {
                oPlaceInfo = oTarget._place(oParentPlaceInfo);
            }
            oPlaceInfo = oPlaceInfo || {};
            oView = oPlaceInfo.oTargetParent;
            oTargetControl = oPlaceInfo.oTargetControl;
            oEventData.view = oView;
            oEventData.targetControl = oTargetControl;
        } else {
            oRouter._oTargets._display(this._oConfig.target, oTargetData, this._oConfig.titleTarget);
        }
        if (oConfig.callback) {
            oConfig.callback(this, oArguments, oConfig, oTargetControl, oView);
        }
        this.fireEvent('matched', oEventData);
        oRouter.fireRouteMatched(oEventData);
        if (bInital) {
            Log.info('The route named \'' + oConfig.name + '\' did match with its pattern', this);
            this.fireEvent('patternMatched', oEventData);
            oRouter.fireRoutePatternMatched(oEventData);
        }
        return oPlaceInfo;
    }
};