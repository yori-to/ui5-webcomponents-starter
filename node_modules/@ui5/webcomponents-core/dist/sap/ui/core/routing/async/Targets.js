import Log from '../../../../base/Log.js';
export default {
    display: function (vTargets, vData, sTitleTarget) {
        var oSequencePromise = Promise.resolve();
        return this._display(vTargets, vData, sTitleTarget, oSequencePromise);
    },
    _display: function (vTargets, vData, sTitleTarget, oSequencePromise, fnAfterCreate) {
        var that = this, aViewInfos = [];
        if (!Array.isArray(vTargets)) {
            vTargets = [vTargets];
        }
        this._attachTitleChanged(vTargets, sTitleTarget);
        return vTargets.reduce(function (oPromise, vTarget) {
            var oTargetInfo = vTarget;
            if (typeof vTarget === 'string') {
                oTargetInfo = { name: vTarget };
            }
            var oTargetCreateInfo = {
                afterCreate: fnAfterCreate,
                prefix: oTargetInfo.prefix
            };
            return that._displaySingleTarget(oTargetInfo, vData, oPromise, oTargetCreateInfo).then(function (oViewInfo) {
                oViewInfo = oViewInfo || {};
                oViewInfo.targetInfo = oTargetInfo;
                aViewInfos.push(oViewInfo);
            });
        }, oSequencePromise).then(function () {
            return aViewInfos;
        });
    },
    _displaySingleTarget: function (oTargetInfo, vData, oSequencePromise, oTargetCreateInfo) {
        var sName = oTargetInfo.name, oTarget = this.getTarget(sName);
        if (oTarget !== undefined) {
            return oTarget._display(vData, oSequencePromise, oTargetCreateInfo);
        } else {
            var sErrorMessage = 'The target with the name "' + sName + '" does not exist!';
            Log.error(sErrorMessage, this);
            return Promise.resolve({
                name: sName,
                error: sErrorMessage
            });
        }
    }
};