import DataType from '../base/DataType.js';
import Component from './Component.js';
import ComponentContainer from './ComponentContainer.js';
import library from './library.js';
import Log from '../../base/Log.js';
import ObjectPath from '../../base/util/ObjectPath.js';
import camelize from '../../base/strings/camelize.js';
var ComponentLifecycle = library.ComponentLifecycle;
var ComponentContainerMetadata = ComponentContainer.getMetadata();
var ComponentSupport = function () {
};
ComponentSupport.run = function () {
    var aElements = ComponentSupport._find();
    for (var i = 0, l = aElements.length; i < l; i++) {
        var oElement = aElements[i];
        Log.debug('Parsing element ' + oElement.outerHTML, '', 'sap/ui/core/ComponentSupport');
        var mSettings = ComponentSupport._parse(oElement);
        ComponentSupport._applyDefaultSettings(mSettings);
        Log.debug('Creating ComponentContainer with the following settings', JSON.stringify(mSettings, 0, 2), 'sap/ui/core/ComponentSupport');
        new ComponentContainer(mSettings).placeAt(oElement);
        oElement.removeAttribute('data-sap-ui-component');
    }
};
ComponentSupport._find = function () {
    return document.querySelectorAll('[data-sap-ui-component]');
};
ComponentSupport._parse = function (oElement) {
    var mSettings = {};
    for (var i = 0, l = oElement.attributes.length; i < l; i++) {
        var oAttribute = oElement.attributes[i];
        var oParsedAttributeName = /^data-((?!sap-ui-component).+)/g.exec(oAttribute.name);
        if (oParsedAttributeName) {
            var sKey = camelize(oParsedAttributeName[1]);
            var oValue = oAttribute.value;
            if (sKey !== 'id') {
                var oProperty = ComponentContainerMetadata.getProperty(sKey);
                var oEvent = !oProperty && ComponentContainerMetadata.getEvent(sKey);
                if (!oProperty && !oEvent) {
                    throw new Error('Property or event "' + sKey + '" does not exist in sap.ui.core.ComponentContainer');
                }
                if (oProperty) {
                    var oType = DataType.getType(oProperty.type);
                    if (!oType) {
                        throw new Error('Property "' + oProperty.name + '" has no known type');
                    }
                    oValue = oType.parseValue(oValue);
                } else if (oEvent) {
                    var fnCallback = ObjectPath.get(oValue);
                    if (typeof fnCallback !== 'function') {
                        throw new Error('Callback handler for event "' + oEvent.name + '" not found');
                    }
                    oValue = fnCallback;
                }
            }
            mSettings[sKey] = oValue;
        }
    }
    return mSettings;
};
ComponentSupport._applyDefaultSettings = function (mSettings) {
    mSettings.async = true;
    if (mSettings.manifest === undefined || mSettings.manifest === 'true') {
        mSettings.manifest = true;
    } else if (mSettings.manifest === 'false') {
        Log.error('Ignoring "manifest=false" for ComponentContainer of component "' + mSettings.name + '" as it is not supported by ComponentSupport. ' + 'Forcing "manifest=true"', '', 'sap/ui/core/ComponentSupport');
        mSettings.manifest = true;
    }
    mSettings.lifecycle = mSettings.lifecycle === undefined ? ComponentLifecycle.Container : mSettings.lifecycle;
    mSettings.autoPrefixId = mSettings.autoPrefixId === undefined ? true : mSettings.autoPrefixId;
};
ComponentSupport.run();
export default ComponentSupport;