import DragDropBase from './DragDropBase.js';
var DragInfo = DragDropBase.extend('sap.ui.core.dnd.DragInfo', {
    metadata: {
        library: 'sap.ui.core',
        interfaces: ['sap.ui.core.dnd.IDragInfo'],
        properties: {
            sourceAggregation: {
                type: 'string',
                defaultValue: null
            }
        },
        events: {
            dragStart: { allowPreventDefault: true },
            dragEnd: {}
        }
    }
});
DragInfo.prototype.isDraggable = function (oControl) {
    if (!this.getEnabled()) {
        return false;
    }
    var oDragSource = this.getParent();
    if (!oDragSource) {
        return false;
    }
    var sSourceAggregation = this.getSourceAggregation();
    if (!this.checkMetadata(oDragSource, sSourceAggregation, 'draggable')) {
        return false;
    }
    if (oDragSource === oControl && !sSourceAggregation) {
        return true;
    }
    if (oControl.getParent() === oDragSource && sSourceAggregation === oControl.sParentAggregationName) {
        return true;
    }
    return false;
};
DragInfo.prototype.fireDragStart = function (oEvent) {
    if (!oEvent || !oEvent.dragSession) {
        return;
    }
    var oDragSession = oEvent.dragSession;
    return this.fireEvent('dragStart', {
        dragSession: oDragSession,
        browserEvent: oEvent.originalEvent,
        target: oDragSession.getDragControl()
    }, true);
};
DragInfo.prototype.fireDragEnd = function (oEvent) {
    if (!oEvent || !oEvent.dragSession) {
        return;
    }
    var oDragSession = oEvent.dragSession;
    return this.fireEvent('dragEnd', {
        dragSession: oDragSession,
        browserEvent: oEvent.originalEvent,
        target: oDragSession.getDragControl()
    });
};
export default DragInfo;