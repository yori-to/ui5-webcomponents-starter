import IconPool from './IconPool.js';
import library from './library.js';
import encodeXML from '../../base/security/encodeXML.js';
var IconColor = library.IconColor;
var IconRenderer = {};
IconRenderer.render = function (oRm, oControl) {
    var vIconInfo = IconPool.getIconInfo(oControl.getSrc(), undefined, 'mixed'), sWidth = oControl.getWidth(), sHeight = oControl.getHeight(), sColor = oControl.getColor(), sBackgroundColor = oControl.getBackgroundColor(), sSize = oControl.getSize(), bNoTabStop = oControl.getNoTabStop(), sTitle = oControl._getOutputTitle(vIconInfo), aLabelledBy, oInvisibleText, oAccAttributes, bIconInfo = false;
    if (vIconInfo instanceof Promise) {
        vIconInfo.then(oControl.invalidate.bind(oControl));
    } else if (vIconInfo) {
        bIconInfo = true;
        aLabelledBy = oControl.getAriaLabelledBy();
        oAccAttributes = oControl._getAccessibilityAttributes(vIconInfo);
        oInvisibleText = oControl.getAggregation('_invisibleText');
    }
    oRm.write('<span');
    oRm.writeControlData(oControl);
    if (bIconInfo) {
        oRm.writeAccessibilityState(oControl, oAccAttributes);
    }
    if (sTitle) {
        oRm.writeAttributeEscaped('title', sTitle);
    }
    if (oControl.hasListeners('press') && !bNoTabStop) {
        oRm.writeAttribute('tabindex', 0);
    }
    if (bIconInfo) {
        oRm.writeAttributeEscaped('data-sap-ui-icon-content', vIconInfo.content);
        oRm.addStyle('font-family', '\'' + encodeXML(vIconInfo.fontFamily) + '\'');
    }
    if (sWidth) {
        oRm.addStyle('width', sWidth);
    }
    if (sHeight) {
        oRm.addStyle('height', sHeight);
        oRm.addStyle('line-height', sHeight);
    }
    if (sColor && !(sColor in IconColor)) {
        oRm.addStyle('color', sColor);
    }
    if (sBackgroundColor && !(sBackgroundColor in IconColor)) {
        oRm.addStyle('background-color', sBackgroundColor);
    }
    if (sSize) {
        oRm.addStyle('font-size', sSize);
    }
    oRm.addClass('sapUiIcon');
    if (bIconInfo && !vIconInfo.suppressMirroring) {
        oRm.addClass('sapUiIconMirrorInRTL');
    }
    if (oControl.hasListeners('press')) {
        oRm.addClass('sapUiIconPointer');
    }
    oRm.writeClasses();
    oRm.writeStyles();
    oRm.write('>');
    if (aLabelledBy && aLabelledBy.length && oInvisibleText) {
        oRm.renderControl(oInvisibleText);
    }
    oRm.write('</span>');
};
export default IconRenderer;