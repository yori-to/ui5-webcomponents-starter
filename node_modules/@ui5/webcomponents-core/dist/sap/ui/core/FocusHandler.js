import Device from '../Device.js';
import BaseObject from '../base/Object.js';
import containsOrEquals from '../dom/containsOrEquals.js';
import Log from '../../base/Log.js';
import jQuery from '../thirdparty/jquery.js';
import '../dom/jquery/control.js';
var FocusHandler = BaseObject.extend('sap.ui.core.FocusHandler', {
    constructor: function (oRootRef, oCore) {
        BaseObject.apply(this);
        this.oCore = oCore;
        this.oCurrent = null;
        this.oLast = null;
        this.aEventQueue = [];
        this.oLastFocusedControlInfo = null;
        this.fEventHandler = jQuery.proxy(this.onEvent, this);
        if (oRootRef.addEventListener && !Device.browser.msie) {
            oRootRef.addEventListener('focus', this.fEventHandler, true);
            oRootRef.addEventListener('blur', this.fEventHandler, true);
        } else {
            jQuery(oRootRef).bind('activate', this.fEventHandler);
            jQuery(oRootRef).bind('deactivate', this.fEventHandler);
        }
        Log.debug('FocusHandler setup on Root ' + oRootRef.type + (oRootRef.id ? ': ' + oRootRef.id : ''), null, 'sap.ui.core.FocusHandler');
    }
});
FocusHandler.prototype.getCurrentFocusedControlId = function () {
    var aCtrls = null;
    try {
        var $Act = jQuery(document.activeElement);
        if ($Act.is(':focus')) {
            aCtrls = $Act.control();
        }
    } catch (err) {
    }
    return aCtrls && aCtrls.length > 0 ? aCtrls[0].getId() : null;
};
FocusHandler.prototype.getControlFocusInfo = function (sControlId) {
    sControlId = sControlId || this.getCurrentFocusedControlId();
    if (!sControlId) {
        return null;
    }
    var oControl = this.oCore && this.oCore.byId(sControlId);
    if (oControl) {
        return {
            id: sControlId,
            control: oControl,
            info: oControl.getFocusInfo(),
            type: oControl.getMetadata().getName(),
            focusref: oControl.getFocusDomRef()
        };
    }
    return null;
};
FocusHandler.prototype.updateControlFocusInfo = function (oControl) {
    if (oControl && this.oLastFocusedControlInfo && this.oLastFocusedControlInfo.control === oControl) {
        var sControlId = oControl.getId();
        this.oLastFocusedControlInfo = this.getControlFocusInfo(sControlId);
        Log.debug('Update focus info of control ' + sControlId, null, 'sap.ui.core.FocusHandler');
    }
};
FocusHandler.prototype.restoreFocus = function (oControlFocusInfo) {
    var oInfo = oControlFocusInfo || this.oLastFocusedControlInfo;
    if (!oInfo) {
        return;
    }
    var oControl = this.oCore && this.oCore.byId(oInfo.id);
    if (oControl && oInfo.info && oControl.getMetadata().getName() == oInfo.type && oControl.getFocusDomRef() != oInfo.focusref && (oControlFocusInfo || oControl !== oInfo.control)) {
        Log.debug('Apply focus info of control ' + oInfo.id, null, 'sap.ui.core.FocusHandler');
        oInfo.control = oControl;
        this.oLastFocusedControlInfo = oInfo;
        oControl.applyFocusInfo(oInfo.info);
    } else {
        Log.debug('Apply focus info of control ' + oInfo.id + ' not possible', null, 'sap.ui.core.FocusHandler');
    }
};
FocusHandler.prototype.destroy = function (event) {
    var oRootRef = event.data.oRootRef;
    if (oRootRef) {
        if (oRootRef.removeEventListener && !Device.browser.msie) {
            oRootRef.removeEventListener('focus', this.fEventHandler, true);
            oRootRef.removeEventListener('blur', this.fEventHandler, true);
        } else {
            jQuery(oRootRef).unbind('activate', this.fEventHandler);
            jQuery(oRootRef).unbind('deactivate', this.fEventHandler);
        }
    }
    this.oCore = null;
};
FocusHandler.prototype.onEvent = function (oBrowserEvent) {
    var oEvent = jQuery.event.fix(oBrowserEvent);
    Log.debug('Event ' + oEvent.type + ' reached Focus Handler (target: ' + oEvent.target + (oEvent.target ? oEvent.target.id : '') + ')', null, 'sap.ui.core.FocusHandler');
    var type = oEvent.type == 'focus' || oEvent.type == 'focusin' || oEvent.type == 'activate' ? 'focus' : 'blur';
    this.aEventQueue.push({
        type: type,
        controlId: getControlIdForDOM(oEvent.target)
    });
    if (this.aEventQueue.length == 1) {
        this.processEvent();
    }
};
FocusHandler.prototype.processEvent = function () {
    var oEvent = this.aEventQueue[0];
    if (!oEvent) {
        return;
    }
    try {
        if (oEvent.type == 'focus') {
            this.onfocusEvent(oEvent.controlId);
        } else if (oEvent.type == 'blur') {
            this.onblurEvent(oEvent.controlId);
        }
    } finally {
        this.aEventQueue.shift();
        if (this.aEventQueue.length > 0) {
            this.processEvent();
        }
    }
};
FocusHandler.prototype.onfocusEvent = function (sControlId) {
    var oControl = this.oCore && this.oCore.byId(sControlId);
    if (oControl) {
        this.oLastFocusedControlInfo = this.getControlFocusInfo(sControlId);
        Log.debug('Store focus info of control ' + sControlId, null, 'sap.ui.core.FocusHandler');
    }
    this.oCurrent = sControlId;
    if (!this.oLast) {
        return;
    }
    if (this.oLast != this.oCurrent) {
        triggerFocusleave(this.oLast, sControlId, this.oCore);
    }
    this.oLast = null;
};
FocusHandler.prototype.onblurEvent = function (sControlId) {
    if (!this.oCurrent) {
        return;
    }
    this.oLast = sControlId;
    this.oCurrent = null;
    setTimeout(this['checkForLostFocus'].bind(this), 0);
};
FocusHandler.prototype.checkForLostFocus = function () {
    if (this.oCurrent == null && this.oLast != null) {
        triggerFocusleave(this.oLast, null, this.oCore);
    }
    this.oLast = null;
};
var getControlIdForDOM = function (oDOM) {
    var sId = jQuery(oDOM).closest('[data-sap-ui]').attr('id');
    if (sId) {
        return sId;
    }
    return null;
};
var triggerFocusleave = function (sControlId, sRelatedControlId, oCore) {
    var oControl = sControlId ? oCore && oCore.byId(sControlId) : null;
    if (oControl) {
        var oRelatedControl = sRelatedControlId ? oCore.byId(sRelatedControlId) : null;
        var oEvent = jQuery.Event('sapfocusleave');
        oEvent.target = oControl.getDomRef();
        oEvent.relatedControlId = oRelatedControl ? oRelatedControl.getId() : null;
        oEvent.relatedControlFocusInfo = oRelatedControl ? oRelatedControl.getFocusInfo() : null;
        var oControlUIArea = oControl.getUIArea();
        var oUiArea = null;
        if (oControlUIArea) {
            oUiArea = oCore.getUIArea(oControlUIArea.getId());
        } else {
            var oPopupUIAreaDomRef = oCore.getStaticAreaRef();
            if (containsOrEquals(oPopupUIAreaDomRef, oEvent.target)) {
                oUiArea = oCore.getUIArea(oPopupUIAreaDomRef.id);
            }
        }
        if (oUiArea) {
            oUiArea._handleEvent(oEvent);
        }
    }
};
export default FocusHandler;