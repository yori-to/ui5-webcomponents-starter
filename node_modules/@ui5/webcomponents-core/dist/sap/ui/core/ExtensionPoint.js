import Log from '../../base/Log.js';
import ObjectPath from '../../base/util/ObjectPath.js';
import View from './mvc/View.js';
sap.ui.extensionpoint = function (oContainer, sExtName, fnCreateDefaultContent, oTargetControl, sAggregationName) {
    Log.warning('Do not use deprecated factory function \'sap.ui.extensionpoint\'. Use \'sap.ui.core.ExtensionPoint.load\' instead', 'sap.ui.extensionpoint', null, function () {
        return {
            type: 'sap.ui.extensionpoint',
            name: sExtName
        };
    });
    return ExtensionPoint._factory(oContainer, sExtName, fnCreateDefaultContent, oTargetControl, sAggregationName);
};
var ExtensionPoint = sap.ui.extensionpoint;
ExtensionPoint._factory = function (oContainer, sExtName, fnCreateDefaultContent, oTargetControl, sAggregationName) {
    var extensionConfig, oView, vResult;
    var CustomizingConfiguration = sap.ui.require('sap/ui/core/CustomizingConfiguration'), View = sap.ui.require('sap/ui/core/mvc/View'), Fragment = sap.ui.require('sap/ui/core/Fragment');
    if (CustomizingConfiguration) {
        if (View && oContainer instanceof View) {
            extensionConfig = CustomizingConfiguration.getViewExtension(oContainer.sViewName, sExtName, oContainer);
            oView = oContainer;
        } else if (Fragment && oContainer instanceof Fragment) {
            extensionConfig = CustomizingConfiguration.getViewExtension(oContainer.getFragmentName(), sExtName, oContainer);
            oView = oContainer._oContainingView;
        }
        if (extensionConfig) {
            if (extensionConfig.className) {
                var fnClass = sap.ui.requireSync(extensionConfig.className.replace(/\./g, '/'));
                fnClass = fnClass || ObjectPath.get(extensionConfig.className);
                var sId = oView && extensionConfig.id ? oView.createId(extensionConfig.id) : extensionConfig.id;
                Log.info('Customizing: View extension found for extension point \'' + sExtName + '\' in View \'' + oView.sViewName + '\': ' + extensionConfig.className + ': ' + (extensionConfig.viewName || extensionConfig.fragmentName));
                if (extensionConfig.className === 'sap.ui.core.Fragment') {
                    var oFragment = new fnClass({
                        id: sId,
                        type: extensionConfig.type,
                        fragmentName: extensionConfig.fragmentName,
                        containingView: oView
                    });
                    vResult = Array.isArray(oFragment) ? oFragment : [oFragment];
                } else if (extensionConfig.className === 'sap.ui.core.mvc.View') {
                    var oView = View._legacyCreate({
                        type: extensionConfig.type,
                        viewName: extensionConfig.viewName,
                        id: sId
                    });
                    vResult = [oView];
                } else {
                    Log.warning('Customizing: Unknown extension className configured (and ignored) in Component.js for extension point \'' + sExtName + '\' in View \'' + oView.sViewName + '\': ' + extensionConfig.className);
                }
            } else {
                Log.warning('Customizing: no extension className configured in Component.js for extension point \'' + sExtName + '\' in View \'' + oView.sViewName + '\': ' + extensionConfig.className);
            }
        }
    }
    if (!vResult && typeof fnCreateDefaultContent === 'function') {
        vResult = fnCreateDefaultContent();
    }
    var fnProcessResult = function (vResult) {
        if (vResult && !Array.isArray(vResult)) {
            vResult = [vResult];
        }
        if (vResult && oTargetControl) {
            var oAggregationInfo = oTargetControl.getMetadata().getAggregation(sAggregationName);
            if (oAggregationInfo) {
                for (var i = 0, l = vResult.length; i < l; i++) {
                    oTargetControl[oAggregationInfo._sMutator](vResult[i]);
                }
            } else {
                Log.error('Creating extension point failed - Tried to add extension point with name ' + sExtName + ' to an aggregation of ' + oTargetControl.getId() + ' in view ' + oView.sViewName + ', but sAggregationName was not provided correctly and I could not find a default aggregation');
            }
        }
        return vResult || [];
    };
    if (vResult && typeof vResult.then === 'function') {
        return vResult.then(fnProcessResult);
    } else {
        return fnProcessResult(vResult);
    }
};
ExtensionPoint.load = function (mOptions) {
    return Promise.resolve(ExtensionPoint._factory(mOptions.container, mOptions.name, mOptions.createDefaultContent));
};
export default ExtensionPoint;