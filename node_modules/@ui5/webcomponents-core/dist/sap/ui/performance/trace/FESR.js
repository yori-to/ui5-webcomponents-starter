import URI from '../../thirdparty/URI.js';
import Device from '../../Device.js';
import Passport from './Passport.js';
import Interaction from './Interaction.js';
import XHRInterceptor from '../XHRInterceptor.js';
import Version from '../../../base/util/Version.js';
var bFesrActive = false, ROOT_ID = Passport.getRootId(), CLIENT_ID = Passport.createGUID().substr(-8, 8) + ROOT_ID, HOST = window.location.host, CLIENT_OS = Device.os.name + '_' + Device.os.version, CLIENT_MODEL = Device.browser.name + '_' + Device.browser.version, CLIENT_DEVICE = setClientDevice(), sAppVersion = '', sAppVersionFull = '', iE2eTraceLevel, sFESRTransactionId, iStepCounter = 0, sFESR, sFESRopt;
function setClientDevice() {
    var iClientId = 0;
    if (Device.system.combi) {
        iClientId = 1;
    } else if (Device.system.desktop) {
        iClientId = 2;
    } else if (Device.system.tablet) {
        iClientId = 4;
    } else if (Device.system.phone) {
        iClientId = 3;
    }
    return iClientId;
}
function formatInteractionStartTimestamp(iTimeStamp) {
    var oDate = new Date(iTimeStamp);
    return oDate.toISOString().replace(/[^\d]/g, '');
}
function isCORSRequest(sUrl) {
    var sHost = new URI(sUrl).host();
    return sHost && sHost !== HOST;
}
function registerXHROverride() {
    XHRInterceptor.register('PASSPORT_HEADER', 'open', function () {
        if (!isCORSRequest(arguments[1])) {
            var oPendingInteraction = Interaction.getPending();
            if (oPendingInteraction) {
                if (sAppVersionFull != oPendingInteraction.appVersion) {
                    sAppVersionFull = oPendingInteraction.appVersion;
                    sAppVersion = sAppVersionFull ? formatVersion(sAppVersionFull) : '';
                }
            }
            this.setRequestHeader('SAP-PASSPORT', Passport.header(iE2eTraceLevel, ROOT_ID, Passport.getTransactionId(), oPendingInteraction ? oPendingInteraction.component + sAppVersion : undefined, oPendingInteraction ? oPendingInteraction.trigger + '_' + oPendingInteraction.event + '_' + iStepCounter : undefined));
        }
    });
    XHRInterceptor.register('FESR', 'open', function () {
        if (!isCORSRequest(arguments[1])) {
            if (!sFESRTransactionId) {
                sFESRTransactionId = Passport.getTransactionId();
            }
            if (sFESR) {
                this.setRequestHeader('SAP-Perf-FESRec', sFESR);
                this.setRequestHeader('SAP-Perf-FESRec-opt', sFESRopt);
                sFESR = null;
                sFESRopt = null;
                sFESRTransactionId = Passport.getTransactionId();
                iStepCounter++;
            }
        }
    });
}
function createFESR(oInteraction) {
    return [
        format(ROOT_ID, 32),
        format(sFESRTransactionId, 32),
        format(oInteraction.navigation, 16),
        format(oInteraction.roundtrip, 16),
        format(oInteraction.duration, 16),
        format(oInteraction.completeRoundtrips, 8),
        format(CLIENT_ID, 40),
        format(oInteraction.networkTime, 16),
        format(oInteraction.requestTime, 16),
        format(CLIENT_OS, 20),
        'SAP_UI5'
    ].join(',');
}
function createFESRopt(oInteraction, oFESRHandle) {
    return [
        format(oFESRHandle.appNameShort, 20, true),
        format(oFESRHandle.stepName, 20, true),
        '',
        format(CLIENT_MODEL, 20),
        format(oInteraction.bytesSent, 16),
        format(oInteraction.bytesReceived, 16),
        '',
        '',
        format(oInteraction.processing, 16),
        oInteraction.requestCompression ? 'X' : '',
        '',
        '',
        '',
        '',
        format(oInteraction.busyDuration, 16),
        '',
        format(CLIENT_DEVICE, 1),
        '',
        format(formatInteractionStartTimestamp(oInteraction.start), 20),
        format(oFESRHandle.appNameLong, 70, true)
    ].join(',');
}
function format(vField, iLength, bCutFromFront) {
    if (!vField) {
        vField = vField === 0 ? '0' : '';
    } else if (typeof vField === 'number') {
        var iField = vField;
        vField = Math.round(vField).toString();
        if (vField.length > iLength || iField < 0) {
            vField = '-1';
        }
    } else {
        vField = bCutFromFront ? vField.substr(-iLength, iLength) : vField.substr(0, iLength);
    }
    return vField;
}
function formatVersion(sVersion) {
    var oVersion = new Version(sVersion);
    return '@' + oVersion.getMajor() + '.' + oVersion.getMinor() + '.' + oVersion.getPatch();
}
function createHeader(oFinishedInteraction, oFESRHandle) {
    sFESR = createFESR(oFinishedInteraction);
    sFESRopt = createFESRopt(oFinishedInteraction, oFESRHandle);
}
var FESR = {};
FESR.setActive = function (bActive) {
    if (bActive && !bFesrActive) {
        bFesrActive = true;
        Passport.setActive(true);
        Interaction.setActive(true);
        iE2eTraceLevel = Passport.traceFlags();
        registerXHROverride();
        Interaction.onInteractionFinished = function (oFinishedInteraction, bForced) {
            var oFESRHandle = FESR.onBeforeCreated({
                stepName: oFinishedInteraction.trigger + '_' + oFinishedInteraction.event,
                appNameLong: oFinishedInteraction.stepComponent || oFinishedInteraction.component,
                appNameShort: oFinishedInteraction.stepComponent || oFinishedInteraction.component
            }, oFinishedInteraction);
            if (oFinishedInteraction.requests.length > 0 || bForced) {
                createHeader(oFinishedInteraction, oFESRHandle);
            }
        };
    } else if (!bActive && bFesrActive) {
        bFesrActive = false;
        Interaction.setActive(false);
        XHRInterceptor.unregister('FESR', 'open');
        if (XHRInterceptor.isRegistered('PASSPORT_HEADER', 'open')) {
            XHRInterceptor.register('PASSPORT_HEADER', 'open', function () {
                this.setRequestHeader('SAP-PASSPORT', Passport.header(iE2eTraceLevel, ROOT_ID, Passport.getTransactionId()));
            });
        }
        Interaction.onInteractionFinished = null;
    }
};
FESR.getActive = function () {
    return bFesrActive;
};
FESR.onBeforeCreated = function (oFESRHandle, oInteraction) {
    return {
        stepName: oFESRHandle.stepName,
        appNameLong: oFESRHandle.appNameLong,
        appNameShort: oFESRHandle.appNameShort
    };
};
export default FESR;