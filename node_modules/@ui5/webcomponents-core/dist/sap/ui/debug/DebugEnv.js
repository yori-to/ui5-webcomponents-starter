import Interface from '../base/Interface.js';
import ControlTree from './ControlTree.js';
import LogViewer from './LogViewer.js';
import PropertyList from './PropertyList.js';
import Log from '../../base/Log.js';
import jQuery from '../thirdparty/jquery.js';
var DebugEnv = function () {
};
DebugEnv.prototype.startPlugin = function (oCore, bOnInit) {
    this.oCore = oCore;
    this.oWindow = window;
    try {
        this.bRunsEmbedded = typeof window.top.testfwk == 'undefined';
        Log.info('Starting DebugEnv plugin (' + (this.bRunsEmbedded ? 'embedded' : 'testsuite') + ')');
        if (!this.bRunsEmbedded || oCore.getConfiguration().getInspect()) {
            this.init(bOnInit);
        }
        if (!this.bRunsEmbedded || oCore.getConfiguration().getTrace()) {
            this.initLogger(Log, bOnInit);
        }
    } catch (oException) {
        Log.warning('DebugEnv plugin can not be started outside the Testsuite.');
    }
};
DebugEnv.prototype.stopPlugin = function () {
    Log.info('Stopping DebugEnv plugin.');
    this.oCore = null;
};
DebugEnv.prototype.init = function (bOnInit) {
    this.oControlTreeWindow = this.bRunsEmbedded ? this.oWindow : top.frames['sap-ui-ControlTreeWindow'] || top;
    this.oPropertyListWindow = this.bRunsEmbedded ? this.oWindow : top.frames['sap-ui-PropertyListWindow'] || top;
    var bRtl = sap.ui.getWCCore().getConfiguration().getRTL();
    var oControlTreeRoot = this.oControlTreeWindow.document.getElementById('sap-ui-ControlTreeRoot'), oPropertyWindowRoot = this.oPropertyListWindow.document.getElementById('sap-ui-PropertyWindowRoot');
    if (!oControlTreeRoot) {
        oControlTreeRoot = this.oControlTreeWindow.document.createElement('DIV');
        oControlTreeRoot.setAttribute('id', 'sap-ui-ControlTreeRoot');
        oControlTreeRoot.setAttribute('tabindex', -1);
        oControlTreeRoot.style.position = 'absolute';
        oControlTreeRoot.style.fontFamily = 'Arial';
        oControlTreeRoot.style.fontSize = '8pt';
        oControlTreeRoot.style.backgroundColor = 'white';
        oControlTreeRoot.style.color = 'black';
        oControlTreeRoot.style.border = '1px solid gray';
        oControlTreeRoot.style.overflow = 'auto';
        oControlTreeRoot.style.zIndex = '999999';
        oControlTreeRoot.style.top = '1px';
        if (bRtl) {
            oControlTreeRoot.style.left = '1px';
        } else {
            oControlTreeRoot.style.right = '1px';
        }
        oControlTreeRoot.style.height = '49%';
        oControlTreeRoot.style.width = '200px';
        this.oControlTreeWindow.document.body.appendChild(oControlTreeRoot);
    } else {
        oControlTreeRoot.innerHTML = '';
    }
    this.oControlTreeRoot = oControlTreeRoot;
    if (!oPropertyWindowRoot) {
        oPropertyWindowRoot = this.oPropertyListWindow.document.createElement('DIV');
        oPropertyWindowRoot.setAttribute('id', 'sap-ui-PropertyWindowRoot');
        oPropertyWindowRoot.setAttribute('tabindex', -1);
        oPropertyWindowRoot.style.position = 'absolute';
        oPropertyWindowRoot.style.fontFamily = 'Arial';
        oPropertyWindowRoot.style.fontSize = '8pt';
        oPropertyWindowRoot.style.backgroundColor = 'white';
        oPropertyWindowRoot.style.color = 'black';
        oPropertyWindowRoot.style.border = '1px solid gray';
        oPropertyWindowRoot.style.overflow = 'auto';
        oPropertyWindowRoot.style.zIndex = '99999';
        oPropertyWindowRoot.style.width = '196px';
        oPropertyWindowRoot.style.height = '49%';
        if (bRtl) {
            oPropertyWindowRoot.style.left = '1px';
        } else {
            oPropertyWindowRoot.style.right = '1px';
        }
        oPropertyWindowRoot.style.bottom = '1px';
        this.oPropertyListWindow.document.body.appendChild(oPropertyWindowRoot);
    } else {
        oPropertyWindowRoot.innerHTML = '';
    }
    this.oPropertyWindowRoot = oPropertyWindowRoot;
    this.oControlTree = new ControlTree(this.oCore, this.oWindow, oControlTreeRoot, this.bRunsEmbedded);
    this.oPropertyList = new PropertyList(this.oCore, this.oWindow, oPropertyWindowRoot);
    this.oControlTree.attachEvent(ControlTree.M_EVENTS.SELECT, this.oPropertyList.update, this.oPropertyList);
    if (!bOnInit) {
        this.oControlTree.renderDelayed();
    }
    jQuery(window).unload(jQuery.proxy(function (oEvent) {
        this.oControlTree.exit();
        this.oPropertyList.exit();
    }, this));
};
DebugEnv.prototype.initLogger = function (oLogger, bOnInit) {
    this.oLogger = oLogger;
    if (!this.bRunsEmbedded) {
        this.oTraceWindow = top.frames['sap-ui-TraceWindow'];
        this.oTraceViewer = this.oTraceWindow.oLogViewer = new LogViewer(this.oTraceWindow, 'sap-ui-TraceWindowRoot');
        this.oTraceViewer.sLogEntryClassPrefix = 'lvl';
        this.oTraceViewer.lock();
    } else {
        this.oTraceWindow = this.oWindow;
        this.oTraceViewer = new LogViewer(this.oTraceWindow, 'sap-ui-TraceWindowRoot');
    }
    this.oLogger.addLogListener(this.oTraceViewer);
    this.oCore.attachUIUpdated(this.enableLogViewer, this);
    if (!bOnInit) {
        var that = this;
        this.oTimer = setTimeout(function () {
            that.enableLogViewer();
        }, 0);
    }
};
DebugEnv.prototype.enableLogViewer = function () {
    if (this.oTimer) {
        clearTimeout(this.oTimer);
        this.oTimer = undefined;
    }
    this.oCore.detachUIUpdated(this.enableLogViewer, this);
    if (this.oTraceViewer) {
        this.oTraceViewer.unlock();
    }
};
DebugEnv.prototype.isRunningEmbedded = function () {
    return this.bRunsEmbedded;
};
DebugEnv.prototype.isControlTreeShown = function () {
    return jQuery(this.oControlTreeRoot).css('visibility') === 'visible' || jQuery(this.oControlTreeRoot).css('visibility') === 'inherit';
};
DebugEnv.prototype.showControlTree = function () {
    if (!this.oControlTreeRoot) {
        this.init(false);
    }
    jQuery(this.oControlTreeRoot).css('visibility', 'visible');
};
DebugEnv.prototype.hideControlTree = function () {
    jQuery(this.oControlTreeRoot).css('visibility', 'hidden');
};
DebugEnv.prototype.isTraceWindowShown = function () {
    var oLogViewer = this.oTraceWindow && this.oTraceWindow.document.getElementById('sap-ui-TraceWindowRoot');
    return oLogViewer && (jQuery(oLogViewer).css('visibility') === 'visible' || jQuery(oLogViewer).css('visibility') === 'inherit');
};
DebugEnv.prototype.showTraceWindow = function () {
    if (!this.oTraceWindow) {
        this.initLogger(Log, false);
    }
    var oLogViewer = this.oTraceWindow && this.oTraceWindow.document.getElementById('sap-ui-TraceWindowRoot');
    if (oLogViewer) {
        jQuery(oLogViewer).css('visibility', 'visible');
    }
};
DebugEnv.prototype.hideTraceWindow = function () {
    var oLogViewer = this.oTraceWindow && this.oTraceWindow.document.getElementById('sap-ui-TraceWindowRoot');
    if (oLogViewer) {
        jQuery(oLogViewer).css('visibility', 'hidden');
    }
};
DebugEnv.prototype.isPropertyListShown = function () {
    return jQuery(this.oPropertyWindowRoot).css('visibility') === 'visible' || jQuery(this.oPropertyWindowRoot).css('visibility') === 'inherit';
};
DebugEnv.prototype.showPropertyList = function () {
    if (!this.oPropertyWindowRoot) {
        this.init(false);
    }
    jQuery(this.oPropertyWindowRoot).css('visibility', 'visible');
};
DebugEnv.prototype.hidePropertyList = function () {
    jQuery(this.oPropertyWindowRoot).css('visibility', 'hidden');
};
(function () {
    var oThis = new DebugEnv();
    sap.ui.getWCCore().registerPlugin(oThis);
    var oInterface = new Interface(oThis, [
        'isRunningEmbedded',
        'isControlTreeShown',
        'showControlTree',
        'hideControlTree',
        'isTraceWindowShown',
        'showTraceWindow',
        'hideTraceWindow',
        'isPropertyListShown',
        'showPropertyList',
        'hidePropertyList'
    ]);
    DebugEnv.getInstance = function () {
        return oInterface;
    };
}());
export default DebugEnv;