import '../../ui/thirdparty/unorm.js';
import '../../ui/thirdparty/unormdata.js';
function apply() {
    String.prototype.normalize = function (str) {
        switch (str) {
        case 'NFC':
            return nfcQuickCheck(this) ? this : UNorm.nfc(this);
        case 'NFD':
            return UNorm.nfd(this);
        case 'NFKC':
            return UNorm.nfkc(this);
        case 'NFKD':
            return UNorm.nfkd(this);
        default:
            return nfcQuickCheck(this) ? this : UNorm.nfc(this);
        }
    };
}
var mData = {};
(function () {
    var NFC_QC = [
        [
            832,
            833
        ],
        [
            835,
            836
        ],
        884,
        894,
        903,
        [
            2392,
            2399
        ],
        [
            2524,
            2525
        ],
        2527,
        2611,
        2614,
        [
            2649,
            2651
        ],
        2654,
        [
            2908,
            2909
        ],
        3907,
        3917,
        3922,
        3927,
        3932,
        3945,
        3955,
        [
            3957,
            3958
        ],
        3960,
        3969,
        3987,
        3997,
        4002,
        4007,
        4012,
        4025,
        8049,
        8051,
        8053,
        8055,
        8057,
        8059,
        8061,
        8123,
        8126,
        8137,
        8139,
        8147,
        8155,
        8163,
        8171,
        [
            8174,
            8175
        ],
        8185,
        8187,
        8189,
        [
            8192,
            8193
        ],
        8486,
        [
            8490,
            8491
        ],
        9001,
        9002,
        10972,
        [
            63744,
            64013
        ],
        64016,
        64018,
        [
            64021,
            64030
        ],
        64032,
        64034,
        [
            64037,
            64038
        ],
        [
            64042,
            64109
        ],
        [
            64112,
            64217
        ],
        64285,
        64287,
        [
            64298,
            64310
        ],
        [
            64312,
            64316
        ],
        64318,
        [
            64320,
            64321
        ],
        [
            64323,
            64324
        ],
        [
            64326,
            64334
        ],
        [
            119134,
            119140
        ],
        [
            119227,
            119232
        ],
        [
            194560,
            195101
        ],
        [
            768,
            772
        ],
        [
            774,
            780
        ],
        783,
        785,
        [
            787,
            788
        ],
        795,
        [
            803,
            808
        ],
        [
            813,
            814
        ],
        [
            816,
            817
        ],
        824,
        834,
        837,
        [
            1619,
            1621
        ],
        2364,
        2494,
        2519,
        2878,
        2902,
        2903,
        3006,
        3031,
        3158,
        3266,
        [
            3285,
            3286
        ],
        3390,
        3415,
        3530,
        3535,
        3551,
        4142,
        [
            4449,
            4469
        ],
        [
            4520,
            4546
        ],
        6965,
        [
            12441,
            12442
        ],
        69818,
        69927,
        70462,
        70487,
        70832,
        70842,
        70845,
        71087
    ];
    for (var i = 0; i < NFC_QC.length; i++) {
        if (typeof NFC_QC[i] == 'number') {
            mData[NFC_QC[i]] = true;
        } else {
            var a = NFC_QC[i][0];
            var b = NFC_QC[i][1];
            while (a <= b) {
                mData[a++] = true;
            }
        }
    }
}());
function isHighSurrogate(cp) {
    return cp >= 55296 && cp <= 56319;
}
function isLowSurrogate(cp) {
    return cp >= 56320 && cp <= 57343;
}
function getCanonicalClass(cp) {
    var dunit, hash;
    hash = cp & 65280;
    dunit = UNorm.UChar.udata[hash];
    if (dunit === undefined) {
        dunit = UNorm.UChar.udata[hash] = {};
    } else if (typeof dunit === 'string') {
        dunit = UNorm.UChar.udata[hash] = eval('(' + dunit + ')');
    }
    return dunit[cp] && !!dunit[cp][1] ? dunit[cp][1] & 255 : 0;
}
function isNotAllowed(cp) {
    return mData[cp];
}
function nfcQuickCheck(s) {
    if (!/^[\u0001-\u00ff]*$/.test(s)) {
        var lastCanonicalClass = 0;
        for (var i = 0; i < s.length; ++i) {
            var cp = s.charCodeAt(i);
            if (isHighSurrogate(cp)) {
                var ncp = s.charCodeAt(i + 1);
                if (isLowSurrogate(ncp)) {
                    cp = (cp - 55296) * 1024 + (ncp - 56320) + 65536;
                    ++i;
                }
            }
            var canonicalClass = getCanonicalClass(cp);
            if (lastCanonicalClass > canonicalClass && canonicalClass !== 0 || isNotAllowed(cp)) {
                return false;
            }
            lastCanonicalClass = canonicalClass;
        }
    }
    return true;
}
var NormalizePolyfill = Object.create(null);
NormalizePolyfill.apply = apply;
NormalizePolyfill.isStringNFC = nfcQuickCheck;
export default NormalizePolyfill;